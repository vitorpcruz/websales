@model WebSales.Services.DTOs.SaleDTO

@{
    ViewData["Title"] = "Details";
}

<h1>Sale Details</h1>

<div>
    <h2>SaleNumber: @Model.SaleNumber</h2>
    <hr />
    <dl class="row">
        <dt class = "col-sm-4">
            Id
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class = "col-sm-4">
            Product Price At Sale Moment
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.ProductPriceAtMoment)
        </dd>
        <dt class = "col-sm-4">
           Product Quantity Sold
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.ProductQuantity)
        </dd>
        <dt class = "col-sm-4">
            @Html.DisplayNameFor(model => model.Total)
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.Total)
        </dd>
        <dt class = "col-sm-4">
           This sale was cancelled?
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.SaleCancelled)
        </dd>
        <dt class = "col-sm-4">
            Customer Id
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.CustomerId)
        </dd>
        <dt class = "col-sm-4">
            Product Id
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.ProductId)
        </dd>
        <dt class = "col-sm-4">
            Sale Created At
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt class = "col-sm-4">
            Sale Modified At
        </dt>
        <dd class = "col-sm-8">
            @Html.DisplayFor(model => model.ModifiedAt)
        </dd>
    </dl>
</div>
    @if (Model.SaleCancelled)
    {
        <a class="btn btn-success" onclick="revertCancelSale(@Model.SaleNumber)">Revert cancel sale</a>
    } else
    {
        <a class="btn btn-warning" onclick="cancelSale(@Model.SaleNumber)">Cancel sale</a>
    }

    <a onclick="deleteSale(@Model.Id)" class="btn btn-danger">Delete this sale</a>

    <a asp-action="Index" class="btn btn-primary">Back to List</a>
</div>

<script type="text/javascript">
    async function cancelSale(saleNumber) {
        if (confirm("Do you want cancel this sale?")) {
            await axios.post(`@(Url.Action("CancelSaleBySaleNumber", "Sales"))?q=${saleNumber}`)
                .then(response => console.log(response))
                .catch(error => {
                    console.log(error);
                    return;
                })
            alert("Sale cancelled successfully")

            window.location = `@(Url.Action("Details", "Sales"))?saleNumber=${saleNumber}`
        } else {
            alert("Sale not deleted")
        }
    }

    async function revertCancelSale(saleNumber) {
        if (confirm("Do you want revert this cancel sale?")) {
            await axios.post(`@(Url.Action("RevertCancelledSaleBySaleNumber", "Sales"))?q=${saleNumber}`)
                .then(response => console.log(response))
                .catch(error => {
                    console.log(error);
                    return;
                })
            alert("Sale reverted successfully")

            window.location = `@(Url.Action("Details", "Sales"))?saleNumber=${saleNumber}`
        } else {
            alert("Sale not reverted")
        }
    }

    async function deleteSale(id) {
        if (confirm("Do you want delete this sale?")) {
            await axios.delete(`@(Url.Action("DeleteSale", "Sales"))?id=${id}`)
                .then(response => console.log(response))
                .catch(error => {
                    console.log(error);
                    return;
                })
            alert("Sale deleted successfully")

            window.location = `@(Url.Action("Index", "Sales"))`
        } else {
            alert("Sale not deleted")
        }
    }
</script>