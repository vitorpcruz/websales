@model IEnumerable<WebSales.Services.DTOs.SaleCompleteDTO>

@{
    ViewData["Title"] = "Index";
}

<h1>Products Sold </h1>
<h1 id="profit">R$ 0.00 </h1>

<div>
    <button class="btn btn-success" id="calculate">
        Reload Profit
        <i class="fa fa-refresh" aria-hidden="true"></i>
    </button>
</div>
<hr />
<span>
    <a asp-action="BestSeillingProducts" asp-controller="Sales" class="btn btn-primary">Get Best Selling Product List</a>
</span>
<span>
    <a asp-action="PurchasesMadebyValidCustomers" asp-controller="Sales" class="btn btn-primary">Sales with registered customers</a>
</span>
<span>
    <a asp-action="RegisterSale" class="btn btn-success">Register Sale</a>
</span>
<table class="table table-hover table-striped thead-dark">
    <thead>
        <tr>
            <th>
                SaleNumber
            </th>
            <th>
                Total
            </th>
            <th>
                Product Name
            </th>
            <th>
                Customer Name
            </th>
            <th>
                Is Cancelled?
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SaleNumber)
            </td>
            <td>
                R$ @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerFullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SaleCancelled)
            </td>
            <td>
                <a href="@Url.Action("RegisterSale", "Sales", new { saleNumber = item.SaleNumber.ToString()})" class="btn btn-success">
                    Edit
                </a>
                    <a class="btn btn-primary" href="@Url.Action("Details", "Sales", new { saleNumber = item.SaleNumber.ToString()})">
                    Details
                </a>
            </td>
        </tr>
}
    </tbody>
</table>

<script type="text/javascript">
    document.getElementById("calculate").addEventListener("click", async function (event) {
        event.preventDefault()
        await axios.get(`@(Url.Action("GetTodayProfit", "Sales"))`)
            .then(r => {
                document.getElementById("profit").innerText = `R$ ${r.data}`
            })
            .catch(console.log)
    });
</script>